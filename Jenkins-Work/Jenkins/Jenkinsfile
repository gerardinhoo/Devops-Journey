pipeline {
  agent any
  options { skipDefaultCheckout(true) }

  environment {
    IMAGE = "jenkins-express:${env.BUILD_NUMBER}"
    DOCKER_BUILDKIT = "1"
  }

  stages {
    stage('Checkout') {
      steps {
        checkout scm
      }
    }

    stage('Build Image') {
      steps {
        // Dockerfile is in Jenkins-Work/Jenkins
        dir('Jenkins-Work/Jenkins') {
          sh 'docker build -t $IMAGE .'
        }
      }
    }

    stage('Run Container (smoke test)') {
      steps {
        sh '''
          docker rm -f jx || true
          docker run -d --name jx -p 3000:3000 $IMAGE
          # tiny wait + health check
          sleep 3
          curl -fsS http://localhost:3000/health
        '''
      }
    }
  }
  post {
  success {
    slackSend(
      channel: '#all-gerard-eklu-the-dev',
      color: 'good',
      message: "✅ SUCCESS: Build #${env.BUILD_NUMBER} for ${env.JOB_NAME}"
    )
  }
  failure {
    slackSend(
      channel: '#all-gerard-eklu-the-dev',
      color: 'danger',
      message: "❌ FAILED: Build #${env.BUILD_NUMBER} for ${env.JOB_NAME}"
    )
  }
}
}


