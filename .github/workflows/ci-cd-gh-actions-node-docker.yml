name: Github Actios CI/CD

on:
  push:
    branches: ['main']
    paths:
      - 'gh-actions-node-docker/**'
      - '.github/workflows/ci-cd-gh-actions-node-docker.yml'
  workflow_dispatch:

# Needed to push to GHCR with GITHUB_TOKEN
permissions:
  contents: read
  packages: write

env:
  IMAGE_NAME: gh-actions-node-docker
  REGISTRY: ghcr.io
  GH_USER: ${{ github.repository_owner }}

jobs:
  ci-build-test:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: gh-actions-node-docker
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Install
        run: npm ci

      - name: Test
        run: npm test

      - name: Log in to GHCR
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build & Push (latest + sha)
        uses: docker/build-push-action@v6
        with:
          context: ./gh-actions-node-docker #build from subfolder
          push: true
          tags: |
            ${{ env.REGISTRY }}/${{ env.GH_USER }}/${{ env.IMAGE_NAME }}:latest
            ${{ env.REGISTRY }}/${{ env.GH_USER }}/${{ env.IMAGE_NAME }}:${{ github.sha }}

  deploy-ec2:
    needs: ci-build-test
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    steps:
      - name: Checkout (for deploy)
        uses: actions/checkout@v4

      - name: Ensure remote dir
        uses: appleboy/ssh-action@v1.2.0
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USER }}
          key: ${{ secrets.EC2_SSH_KEY }}
          script: mkdir -p /home/${{ secrets.EC2_USER }}/app

      - name: Upload compose.yml
        uses: appleboy/scp-action@v0.1.7
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USER }}
          key: ${{ secrets.EC2_SSH_KEY }}
          source: 'gh-actions-node-docker/compose.yml'
          target: '/home/${{ secrets.EC2_USER }}/app/'
          strip_components: 1
          overwrite: true

      - name: SSH deploy
        uses: appleboy/ssh-action@v1.2.0
        env:
          GHCR_PAT: ${{ secrets.GHCR_PAT }} # only if your GHCR package is private
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USER }}
          key: ${{ secrets.EC2_SSH_KEY }}
          script: |
            set -euo pipefail
            GH_USER="${{ github.repository_owner }}"
            TAG="${{ github.sha }}"
            REMOTE_DIR="/home/${{ secrets.EC2_USER }}/app"
            COMPOSE_FILE="${REMOTE_DIR}/compose.yml"

            # Ensure Docker & Compose
            command -v docker >/dev/null 2>&1 || curl -fsSL https://get.docker.com | sh
            docker compose version || (sudo apt-get update && sudo apt-get install -y docker-compose-plugin)

            cd "$REMOTE_DIR"
            test -f "$COMPOSE_FILE" || { echo "Missing $COMPOSE_FILE"; ls -al; exit 1; }

            # Login only if image is private
            if [ -n "${GHCR_PAT:-}" ]; then
              echo "${GHCR_PAT}" | docker login ghcr.io -u "${GH_USER}" --password-stdin
            fi

            echo "Remote dir contents:"; find "$REMOTE_DIR" -maxdepth 2 -type f -name 'compose.yml' -print -exec ls -l {} \;

            GH_USER="${GH_USER}" TAG="${TAG}" docker compose -f "$COMPOSE_FILE" pull
            GH_USER="${GH_USER}" TAG="${TAG}" docker compose -f "$COMPOSE_FILE" up -d

            # Health check
            curl -fsS http://localhost/health || (docker logs ga-demo && exit 1)

            docker image prune -f
